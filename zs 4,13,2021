background(242, 228, 201);
//global variables
var score;
var lives = 10;
var scene = 0;//variable for number of scenes
var stillPlaying = false;//checks if the game is still playing

//start of Bitmoji code
background(255, 255, 255);
var drawBitmojiHead = function(bitmojiX, bitmojiY, bitmojiHeight){
noStroke();
fill(255, 205, 146); //fill to skin tone
ellipse(bitmojiX+(bitmojiHeight/150*100), bitmojiY+(bitmojiHeight/150*100), bitmojiHeight/150*86, bitmojiHeight/150*100); //head

fill(0, 0, 0);
quad(bitmojiX+(bitmojiHeight/150*56), bitmojiY+(bitmojiHeight/150*96), bitmojiX+(bitmojiHeight/150*68), bitmojiY+(bitmojiHeight/150*96), bitmojiX+(bitmojiHeight/150*78), bitmojiY+(bitmojiHeight/150*58), bitmojiX+(bitmojiHeight/150*65), bitmojiY+(bitmojiHeight/150*56));//left sideburn
quad(bitmojiX+(bitmojiHeight/150*122), bitmojiY+(bitmojiHeight/150*56), bitmojiX+(bitmojiHeight/150*129), bitmojiY+(bitmojiHeight/150*96), bitmojiX+(bitmojiHeight/150*143), bitmojiY+(bitmojiHeight/150*96), bitmojiX+(bitmojiHeight/150*133), bitmojiY+(bitmojiHeight/150*58));//right sideburn
ellipse(bitmojiX+(bitmojiHeight/150*100), bitmojiY+(bitmojiHeight/150*62), bitmojiHeight/150*70, bitmojiHeight/150*26);//center hair

stroke(135, 75, 11);
strokeWeight(bitmojiHeight/150*15);
fill(255, 255, 255);
arc(bitmojiX+(bitmojiHeight/150*96), bitmojiY+(bitmojiHeight/150*21), bitmojiHeight/150*160, bitmojiHeight/150*75, 36, 136);//cowboy hat brim
strokeWeight(bitmojiHeight/150*21);
fill(135, 75, 11);
quad(bitmojiX+(bitmojiHeight/150*75), bitmojiY+(bitmojiHeight/150*43), bitmojiX+(bitmojiHeight/150*95), bitmojiY+(bitmojiHeight/150*43), bitmojiX+(bitmojiHeight/150*95), bitmojiY+(bitmojiHeight/150*14), bitmojiX+(bitmojiHeight/150*80), bitmojiY+(bitmojiHeight/150*10));//left hat piece
quad(bitmojiX+(bitmojiHeight/150*95), bitmojiY+(bitmojiHeight/150*43), bitmojiX+(bitmojiHeight/150*125), bitmojiY+(bitmojiHeight/150*43), bitmojiX+(bitmojiHeight/150*120), bitmojiY+(bitmojiHeight/150*10), bitmojiX+(bitmojiHeight/150*95), bitmojiY+(bitmojiHeight/150*17));//right hat piece

noStroke();
stroke(0, 0, 0);
strokeWeight(1);
fill(255, 255, 255);
ellipse(bitmojiX+(bitmojiHeight/150*87), bitmojiY+(bitmojiHeight/150*90), bitmojiHeight/150*18, bitmojiHeight/150*12);//left pupil
ellipse(bitmojiX+(bitmojiHeight/150*114), bitmojiY+(bitmojiHeight/150*90), bitmojiHeight/150*18, bitmojiHeight/150*12);//right pupil
fill(0, 0, 0);
ellipse(bitmojiX+(bitmojiHeight/150*87),bitmojiY+(bitmojiHeight/150*90), bitmojiHeight/150*2, bitmojiHeight/150*6);
ellipse(bitmojiX+(bitmojiHeight/150*114), bitmojiY+(bitmojiHeight/150*90), bitmojiHeight/150*2, bitmojiHeight/150*6);

fill(255, 205, 146);
bezier(bitmojiX+(bitmojiHeight/150*100), bitmojiY+(bitmojiHeight/150*110), bitmojiX+(bitmojiHeight/150*105), bitmojiY+(bitmojiHeight/150*112), bitmojiX+(bitmojiHeight/150*116), bitmojiY+(bitmojiHeight/150*108), bitmojiX+(bitmojiHeight/150*100), bitmojiY+(bitmojiHeight/150*92));//nose

fill(255, 255, 255);
arc(bitmojiX+(bitmojiHeight/150*100), bitmojiY+(bitmojiHeight/150*120), bitmojiHeight/150*38, bitmojiHeight/150*28, 0, 182); //mouth
line(bitmojiX+(bitmojiHeight/150*80), bitmojiY+(bitmojiHeight/150*119), bitmojiX+(bitmojiHeight/150*119), bitmojiY+(bitmojiHeight/150*119));//top of mouth

noStroke();
fill(255, 205, 146);
rect(bitmojiX+(bitmojiHeight/150*87), bitmojiY+(bitmojiHeight/150*137), bitmojiHeight/150*26, bitmojiHeight/150*33, 6);//neck
};

var drawBitmojiBody = function(bitmojiX, bitmojiY, bitmojiHeight){
fill(0, 0, 0);
rect(bitmojiX+(bitmojiHeight/150*40), bitmojiY+(bitmojiHeight/150*164), bitmojiHeight/150*125, bitmojiHeight/150*146, 31);//body

stroke(0, 0, 0);
strokeWeight(bitmojiHeight/150*37);
line(bitmojiX+(bitmojiHeight/150*60), bitmojiY+(bitmojiHeight/150*190), bitmojiX-(bitmojiHeight/150*14), bitmojiY+(bitmojiHeight/150*258));//left arm
line(bitmojiX+(bitmojiHeight/150*146), bitmojiY+(bitmojiHeight/150*190), bitmojiX+(bitmojiHeight/150*216), bitmojiY+(bitmojiHeight/150*258));//right arm

fill(255, 255, 255);
var f = createFont("fantasy");
textFont(f, (bitmojiHeight/150*22));
text("MH",bitmojiX+(bitmojiHeight/150*112), bitmojiY+(bitmojiHeight/150*201));//initials


noStroke();
fill(189, 189, 189);
ellipse(bitmojiX+(bitmojiHeight/150*103), bitmojiY+(bitmojiHeight/150*245), bitmojiHeight/150*80, bitmojiHeight/150*80);
fill(255, 255, 255);
ellipse(bitmojiX+(bitmojiHeight/150*103), bitmojiY+(bitmojiHeight/150*245), bitmojiHeight/150*65, bitmojiHeight/150*65);

textSize(bitmojiHeight/150*10);
fill(0, 0, 0);
text("Steelers", bitmojiX+(bitmojiHeight/150*71), bitmojiY+(bitmojiHeight/150*249));

fill(247, 255, 0);
rect(bitmojiX+(bitmojiHeight/150*103), bitmojiY+(bitmojiHeight/150*231), bitmojiHeight/150*0, bitmojiHeight/150*-2, (bitmojiHeight/150*-15));//yellow star
fill(255, 0, 0);
rect(bitmojiX+(bitmojiHeight/150*120), bitmojiY+(bitmojiHeight/150*246), bitmojiHeight/150*0, bitmojiHeight/150*-2, (bitmojiHeight/150*-15));//red star
fill(26, 0, 255);
rect(bitmojiX+(bitmojiHeight/150*103), bitmojiY+(bitmojiHeight/150*264), bitmojiHeight/150*0, bitmojiHeight/150*-2, (bitmojiHeight/150*-15));//blue star
};


var drawBitmoji = function(bitmojiX, bitmojiY, bitmojiHeight){
 
    drawBitmojiHead(bitmojiX, bitmojiY, bitmojiHeight);
    drawBitmojiBody(bitmojiX, bitmojiY, bitmojiHeight);
};

//end of bitmoji code

var drawCactus = function(CactusX, CactusY, CactusHeight){

//Evil Cactus code
fill(87, 153, 0);
noStroke();
rect(CactusX + (CactusHeight/150*70), CactusY + (CactusHeight/150*87), CactusHeight/150*33, CactusHeight/150*94, CactusHeight/150*25);//base of the cactus
rect(CactusX + (CactusHeight/150*70), CactusY + (CactusHeight/150*169), CactusHeight/150*33, CactusHeight/150*49);
bezier(CactusX + (CactusHeight/150*70), CactusY + (CactusHeight/150*188), CactusX + (CactusHeight/150*24), CactusY + (CactusHeight/150*172), CactusX + (CactusHeight/150*10), CactusY + (CactusHeight/150*61), CactusX + (CactusHeight/150*70), CactusY + (CactusHeight/150*161));//left arm
bezier(CactusX + (CactusHeight/150*100), CactusY + (CactusHeight/150*168), CactusX + (CactusHeight/150*163), CactusY + (CactusHeight/150*128), CactusX + (CactusHeight/150*151), CactusY + (CactusHeight/150*37), CactusX + (CactusHeight/150*100), CactusY + (CactusHeight/150*140));//right arm
strokeWeight(1);
stroke(87, 84, 87);
//grey detail lines
line(CactusX + (CactusHeight/150*96), CactusY + (CactusHeight/150*112), CactusX + (CactusHeight/150*93), CactusY + (CactusHeight/150*217));
beginShape();
curveVertex(CactusX + (CactusHeight/150*142), CactusY + (CactusHeight/150*360));
curveVertex(CactusX + (CactusHeight/150*75), CactusY + (CactusHeight/150*180));
curveVertex(CactusX + (CactusHeight/150*40), CactusY + (CactusHeight/150*136));
curveVertex(CactusX - (CactusHeight/150*7), CactusY - (CactusHeight/150*42));
endShape();
beginShape();
curveVertex(CactusX + (CactusHeight/150*85), CactusY + (CactusHeight/150*537));
curveVertex(CactusX + (CactusHeight/150*76), CactusY + (CactusHeight/150*218));
curveVertex(CactusX + (CactusHeight/150*83), CactusY + (CactusHeight/150*122));
curveVertex(CactusX + (CactusHeight/150*87), CactusY + (CactusHeight/150*8));
endShape();
beginShape();
curveVertex(CactusX + (CactusHeight/150*77), CactusY + (CactusHeight/150*467));
curveVertex(CactusX + (CactusHeight/150*83), CactusY + (CactusHeight/150*218));
curveVertex(CactusX + (CactusHeight/150*87), CactusY + (CactusHeight/150*98));
curveVertex(CactusX + (CactusHeight/150*49), CactusY + (CactusHeight/150*8));
endShape();
beginShape();
curveVertex(CactusX - (CactusHeight/150*6), CactusY + (CactusHeight/150*278));
curveVertex(CactusX + (CactusHeight/150*94), CactusY + (CactusHeight/150*156));
curveVertex(CactusX + (CactusHeight/150*129),  CactusY + (CactusHeight/150*101));
curveVertex(CactusX + (CactusHeight/150*157), CactusY - (CactusHeight/150*129));
endShape();

//eyes & eyebrows
fill(0, 0, 0);
ellipse(CactusX + (CactusHeight/150*80), CactusY + (CactusHeight/150*110), CactusHeight/150*8, CactusHeight/150*22);
ellipse(CactusX + (CactusHeight/150*93), CactusY + (CactusHeight/150*110), CactusHeight/150*8, CactusHeight/150*22);
stroke(0, 0, 0);
strokeWeight(3);
line(CactusX + (CactusHeight/150*75), CactusY + (CactusHeight/150*93), CactusX + (CactusHeight/150*85), CactusY + (CactusHeight/150*101));
line(CactusX + (CactusHeight/150*88), CactusY + (CactusHeight/150*101), CactusX + (CactusHeight/150*98), CactusY + (CactusHeight/150*93));

};


var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 128;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};

//method to draw button
Button.prototype.draw = function() {
    fill(195, 240, 166);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(24);
    textAlign(LEFT, TOP);
    text(this.label, 160, 319);
    textAlign(LEFT, LEFT);
};

//method to check if mouse is inside button
Button.prototype.isMouseInside = function() {
    return mouseX > this.x - 30 &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

//function that produces an OnClick function if the mouse is inside the button
Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

//start button that changes to game scene upon clicking
var btn1 = new Button({
    x: 135,
    y: 308,
    label: "START",
    onClick: function() {//changes scene to game screen and stillPlaying is enabled
        scene = 1;
        stillPlaying = true;
        score = millis();
    }
});


var Player = function(x, y) {
    this.x = x;
    this.y = y;
   
};

Player.prototype.draw = function() {
    fill(255, 0, 0);
    this.y = constrain(this.y, 0, height-105);
    drawBitmoji(this.x, this.y, 33);
    

};

Player.prototype.jump = function() {
   
    this.y -= 30;
};

Player.prototype.fall = function() {
   
    this.y += 3;
};

Player.prototype.checkIfHitCactus = function(cactus) {
    if ((cactus.x + 20 >= this.x && cactus.x - 30 <= this.x) &&
        (cactus.y + 30 >= this.y && cactus.y - 55 <= this.y)) {
        cactus.y = -400;
        lives -= 1;
    }
    
};

var EvilCactus = function(x, y, speed) {//add new parameter
    this.x = x;
    this.y = y;
    this.speed = speed;
    //add new speed property
};

EvilCactus.prototype.draw = function() {
    /*
    fill(89, 71, 0);
    rectMode(CENTER);
    rect(this.x, this.y, 105, 5);
    fill(0, 0, 0);
    ellipse(this.x - 30, this.y + 11, 25, 25);
    ellipse(this.x + 30, this.y + 11, 25, 25);
    noStroke();
    fill(255, 0, 0);
    rect(this.x, this.y - 14, 105, 25, 3);
    rect(this.x - 4, this.y - 39, 67, 25);
    fill(227, 254, 255);
    rect(this.x + 14, this.y - 38, 28, 23);
    rect(this.x + -20, this.y - 38, 28, 23);
    fill(247, 255, 0);
    ellipse(this.x + 46, this.y - 16, 15, 19);
    */
    drawCactus(this.x, this.y, 80);
};

var player = new Player(101, 262);

var cacti = [];


for (var i = 0; i <= 200; i++) {  
    cacti.push(new EvilCactus(i * 260 + 300, 265));
    cacti[i].speed = round(random(-1, -2));
    stillPlaying = true;
        if(i === 200){
            stillPlaying = false; //stops the game once number of cars reaches 100
        }
    
    }

/*
var drawSplashScreen = function(){//start screen
    scene = 0;
    background(255, 240, 212);
    fill(0, 0, 0);
    textSize(40);
    text("Bitmoji Runner", 68, 105);
    //draws static cactus
    drawCactus(108, 56, 150);
    btn1.draw();
};

drawSplashScreen();
*/

mouseClicked = function(){
    if(scene === 0){
        btn1.handleMouseClick();//handles start button for only scene 0
    }
};


var drawGame = function(){
    // static
    background(227, 254, 255);
    fill(130, 79, 43);
    rectMode(CORNER);
    rect(0, height*0.90, width, height*0.10);//ground
    
 


    for (var i = 0; i < cacti.length; i++) {
        cacti[i].draw();
        player.checkIfHitCactus(cacti[i]);
        cacti[i].x += cacti[i].speed;// adds random speed value to each cactus of 1, 2, or 3
    }
    
    fill(0, 0, 0);
    textSize(18);
    text("Score: " + (round((millis()-score)/1000))* 10, 20, 30);//scoreboard
    text("Lives: " + lives, 307, 30);
    
    
    if (keyIsPressed && keyCode === 0) {//allows for bitmoji to rise and fall based upon whether the spacebar is pressed or not
        player.jump();
    } else {
        player.fall();
    }
    player.draw();
};



draw = function() {
    if(scene === 1){
        drawGame();
    }
    
    
};

